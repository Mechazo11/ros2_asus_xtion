<?xml version="1.0"?>

<!-- Copyright (C) 2023  Miguel Ángel González Santamarta
Copyright (C) 2024  Azmyin Md. Kamal

BSD -3 license

This version has only been tested for a simlulated RGB-D sensor.

-->

<robot name="asus_xtion" xmlns:xacro="http://www.ros.org/wiki/xacro">
  
  <xacro:macro name="asus_xtion" params="name parent_link *origin
                                        update_rate:=30.0 
                                        image_height:=480 
                                        image_width:=640">

    <xacro:property name="M_SCALE_XTION" value="0.001"/>
    <xacro:property name="asus_xtion_pro_depth_rel_rgb_py" value="0.0270" />
    <xacro:property name="asus_xtion_pro_cam_rel_rgb_py"   value="-0.0220" />
    <xacro:property name="M_PI" value="3.1415926535897931" />

    <!-- I assume Asus Xtion pro and Intel realsense camera have very similar body structures -->
    <!-- camera body, with origin at bottom screw mount -->
    <joint name="${name}_joint" type="fixed">
      <xacro:insert_block name="origin" />
      <parent link="${parent_link}"/>
      <child link="${name}_bottom_screw_frame" />
    </joint>

    <!-- Self-closing link, serves as a "fixed" reference frame for kinematic transformation -->
    <link name="${name}_bottom_screw_frame"/>

    <joint name="${name}_bottom_to_rgb_frame_joint" type="fixed">
        <origin xyz="0 0 0" rpy="0 0 0"/>
        <parent link="${name}_bottom_screw_frame"/>
        <child link="${name}_rgbd_frame" />
      </joint>

    <!-- Equivalent to ${name}_link in intel_realsense.urdf.xacro -->
    <link name="${name}_rgbd_frame">
      <inertial>
        <mass value="0.001" />
        <origin xyz="0 0 0" />
        <inertia ixx="0.001" ixy="0.0" ixz="0.0"
          iyy="0.001" iyz="0.0"
          izz="0.001" />
      </inertial>
    </link>

    <joint name="${name}_rgb_optical_joint" type="fixed">
      <origin xyz="0 0 0" rpy="${-M_PI/2} 0 ${-M_PI/2}" />
      <parent link="${name}_rgbd_frame" />
      <child link="${name}_rgb_optical_frame" />
    </joint>

    <link name="${name}_rgb_optical_frame">
      <inertial>
        <mass value="0.001" />
        <origin xyz="0 0 0" />
        <inertia ixx="0.001" ixy="0.0" ixz="0.0"
          iyy="0.001" iyz="0.0"
          izz="0.001" />
      </inertial>
    </link>

    <joint name="${name}_cam_joint" type="fixed">
      <origin xyz="0 ${asus_xtion_pro_cam_rel_rgb_py} 0" 
              rpy="0 0 0"/>
      <parent link="${name}_rgbd_frame"/>
      <child link="${name}_cam_link"/>
    </joint>
    <link name="${name}_cam_link">
      <visual>
        <origin xyz="-0.01 0.02 0" rpy="${-M_PI/2} -${M_PI} ${-M_PI/2}"/>
        <geometry>
          <mesh filename="package://asus_xtion_description/meshes/asus_xtion_pro_live.dae" scale="${M_SCALE_XTION} ${M_SCALE_XTION} ${M_SCALE_XTION}"/>
        </geometry>
      </visual>
      <collision>
        <origin xyz="-0.01 0.02 0.0" rpy="${-M_PI/2} -${M_PI} ${-M_PI/2}" />
        <geometry>
          <mesh filename="package://asus_xtion_description/meshes/asus_xtion_pro_live.dae" scale="${M_SCALE_XTION} ${M_SCALE_XTION} ${M_SCALE_XTION}"/>
        </geometry>
      </collision>
      <inertial>
        <mass value="0.01" />
        <origin xyz="0 0 0" />
        <inertia ixx="0.001" ixy="0.0" ixz="0.0"
          iyy="0.001" iyz="0.0"
          izz="0.001" />
      </inertial>
    </link>

    <joint name="${name}_depth_joint" type="fixed">
      <origin xyz="0 ${asus_xtion_pro_depth_rel_rgb_py} 0" rpy="0 0 0" />
      <parent link="${name}_rgbd_frame" />
      <child link="${name}_depth_frame" />
    </joint>

    <link name="${name}_depth_frame">
      <inertial>
        <mass value="0.01" />
        <origin xyz="0 0 0" />
        <inertia ixx="0.001" ixy="0.0" ixz="0.0"
          iyy="0.001" iyz="0.0"
          izz="0.001" />
      </inertial>
    </link>

    <joint name="${name}_cam_depth_optical_joint" type="fixed">
      <origin xyz="0 0 0" rpy="${-M_PI/2} 0 ${-M_PI/2}" />
      <parent link="${name}_depth_frame" />
      <child link="${name}_depth_optical_frame" />
    </joint>

    <link name="${name}_depth_optical_frame">
      <inertial>
        <mass value="0.001" />
        <origin xyz="0 0 0" />
        <inertia ixx="0.001" ixy="0.0" ixz="0.0"
          iyy="0.001" iyz="0.0"
          izz="0.001" />
      </inertial>
    </link>

    <!-- rgbd plugin adopted from sensors_demo.sdf  -->
    <!-- FOV and other parameters taken from original version of asus_xtion_urdf.xacro -->
    <!-- https://github.com/Juancams/kobuki_ros/blob/jazzy-devel/kobuki_description/urdf/kobuki_gazebo.urdf.xacro -->
    <gazebo reference="${name}_rgbd_frame">
      
      <sensor type="rgbd_camera" name="${name}">
          <camera>
            <horizontal_fov>1.57</horizontal_fov>
            <image>
              <format>R8G8B8</format>
              <width>${image_width}</width>
              <height>${image_height}</height>
            </image>
            <clip>
            <near>0.1</near>
            <far>100</far>
          </clip>
          <gz_frame_id>${name}_rgbd_frame</gz_frame_id>
          <optical_frame_id>${name}_rgb_optical_frame</optical_frame_id>
          <noise>
            <type>gaussian</type>
            <mean>0.0</mean>
            <stddev>0.007</stddev>
          </noise>
          <!-- Put these calibration parameters to emulate the camera more accurately -->
          <distortion>
            <k1>0.00000001</k1>
            <k2>0.00000001</k2>
            <k3>0.00000001</k3>
            <p1>0.00000001</p1>
            <p2>0.00000001</p2>
          </distortion>
          <!-- suggested here: https://github.com/gazebosim/gz-sensors/issues/384 -->
          <!-- <gz_frame_id>${name}_depth_frame</gz_frame_id>  -->
          </camera>
          <always_on>1</always_on>
          <update_rate>${update_rate}</update_rate>
          <visualize>true</visualize>
          <gz_frame_id>${name}_rgbd_frame</gz_frame_id>
          <topic>$(arg namespace)/sensors/${name}</topic>
          <!-- <enable_metrics>true</enable_metrics> -->

          
        </sensor>
    </gazebo>
  
  </xacro:macro>

</robot>
